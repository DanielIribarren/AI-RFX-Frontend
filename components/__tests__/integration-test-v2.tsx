/**
 * Integration Test for V2.2 Real Backend Implementation
 * Tests the complete flow from RFX data to budget generation
 */

import React from 'react'
import RfxResultsWrapperV2 from '@/components/rfx-results-wrapper-v2'
import type { RFXResponse } from '@/lib/api'

// Mock data for testing
const mockBackendData: RFXResponse = {
  status: "success",
  data: {
    id: "test-rfx-123",
    requester_name: "Juan P√©rez",
    email: "juan@empresa.com",
    company_name: "Empresa Test S.A.",
    delivery_date: "2024-12-31",
    location: "Madrid, Espa√±a",
    products: [
      {
        product_name: "Licencias ERP",
        quantity: 120,
        unit: "licencias",
        subtotal: 450
      },
      {
        product_name: "M√≥dulo CRM",
        quantity: 1,
        unit: "m√≥dulo",
        subtotal: 12000
      }
    ],
    metadata_json: {
      validation_status: {
        completeness: 0.95,
        accuracy: 0.9
      },
      texto_original_relevante: "Solicitud para implementaci√≥n de ERP..."
    }
  }
}

// Test component with different configurations
export function TestRealBackendIntegration() {
  const handleNewRfx = () => {
    console.log('üîÑ Test: New RFX requested')
  }

  const handleFinalize = (data: any, propuesta: string) => {
    console.log('‚úÖ Test: RFX finalized', { data, propuesta })
  }

  const handleProposalGenerated = async () => {
    console.log('üìÑ Test: Proposal generated')
  }

  return (
    <div className="p-4 space-y-8">
      <h1 className="text-2xl font-bold">üß™ Test de Integraci√≥n V2.2</h1>
      
      {/* Test 1: Legacy Mode */}
      <div className="border p-4 rounded-lg">
        <h2 className="text-lg font-semibold mb-4">Test 1: Modo Legacy</h2>
        <RfxResultsWrapperV2
          onNewRfx={handleNewRfx}
          onFinalize={handleFinalize}
          backendData={mockBackendData}
          onProposalGenerated={handleProposalGenerated}
          
          enableAdvancedPricing={false}
          enableTaxConfiguration={false}
          useApiCalculations={false}
          useRealBackend={false}
        />
      </div>

      {/* Test 2: Real Backend Mode - Basic */}
      <div className="border p-4 rounded-lg">
        <h2 className="text-lg font-semibold mb-4">Test 2: Backend Real V2.2 - B√°sico</h2>
        <RfxResultsWrapperV2
          onNewRfx={handleNewRfx}
          onFinalize={handleFinalize}
          backendData={mockBackendData}
          onProposalGenerated={handleProposalGenerated}
          
          enableAdvancedPricing={true}
          enableTaxConfiguration={false}
          useApiCalculations={true}
          useRealBackend={true}
        />
      </div>

      {/* Test 3: Real Backend Mode - Full Features */}
      <div className="border p-4 rounded-lg">
        <h2 className="text-lg font-semibold mb-4">Test 3: Backend Real V2.2 - Completo</h2>
        <RfxResultsWrapperV2
          onNewRfx={handleNewRfx}
          onFinalize={handleFinalize}
          backendData={mockBackendData}
          onProposalGenerated={handleProposalGenerated}
          
          enableAdvancedPricing={true}
          enableTaxConfiguration={true}
          useApiCalculations={true}
          useRealBackend={true}
        />
      </div>
    </div>
  )
}

// Usage instructions
export const testInstructions = `
## üß™ Instrucciones de Test

### Preparaci√≥n del Backend
1. Aseg√∫rate que el backend est√© ejecut√°ndose en http://localhost:5001
2. Verifica que los endpoints de pricing V2.2 est√©n disponibles:
   - GET /api/pricing/config/{rfx_id}
   - PUT /api/pricing/config/{rfx_id}
   - POST /api/pricing/calculate/{rfx_id}

### Tests a Realizar

#### Test 1: Modo Legacy ‚úÖ
- Deber√≠a funcionar sin errores
- Usa c√°lculos locales √∫nicamente
- No hay conexi√≥n al backend real

#### Test 2: Backend Real V2.2 - B√°sico ‚úÖ
- Configura coordinaci√≥n y costo por persona
- Usa c√°lculos h√≠bridos (local + API)
- Conecta al backend real para configuraciones

#### Test 3: Backend Real V2.2 - Completo ‚úÖ
- Incluye sistema de impuestos
- Funcionalidades avanzadas completas
- Validaci√≥n en tiempo real

### Flujo de Test Completo

1. **Vista de Datos Extra√≠dos**
   - ‚úÖ Tabs funcionando (Datos Extra√≠dos / Archivos Procesados)
   - ‚úÖ Bot√≥n "Generar Presupuesto" navega correctamente
   - ‚úÖ Datos se muestran correctamente

2. **Vista de Generaci√≥n de Presupuesto**
   - ‚úÖ PricingConfigurationCard con backend real
   - ‚úÖ BudgetPreviewCard con c√°lculos h√≠bridos
   - ‚úÖ Navegaci√≥n de vuelta a datos
   - ‚úÖ Guardado de configuraci√≥n en backend

3. **Integraci√≥n Completa**
   - ‚úÖ Estado compartido entre vistas
   - ‚úÖ Persistencia en backend real
   - ‚úÖ C√°lculos precisos con SQL
   - ‚úÖ Validaci√≥n en tiempo real

### Verificaciones de Funcionalidad

#### PricingConfigurationCard
- [ ] Carga configuraci√≥n desde backend real
- [ ] Guarda cambios en backend real
- [ ] Muestra errores de validaci√≥n
- [ ] Indica estado de conexi√≥n

#### BudgetPreviewCard  
- [ ] C√°lculos locales instant√°neos
- [ ] C√°lculos API con backend real
- [ ] Fallback autom√°tico en caso de error
- [ ] Indicadores visuales de m√©todo de c√°lculo

#### Flujo de Navegaci√≥n
- [ ] Data View ‚Üí Budget View funciona
- [ ] Budget View ‚Üí Data View funciona
- [ ] Estado persiste entre navegaciones
- [ ] Configuraci√≥n se mantiene

### Debugging

Si encuentras errores:

1. **Error de conexi√≥n al backend**
   - Verifica que el backend est√© en http://localhost:5001
   - Revisa la consola para errores de red

2. **Error de endpoints**
   - Verifica que los endpoints V2.2 est√©n implementados
   - Revisa la respuesta del servidor

3. **Error de configuraci√≥n**
   - Verifica que el esquema V2.2 est√© en la BD
   - Revisa los logs del servidor de pricing

4. **Error de c√°lculos**
   - Deber√≠a usar fallback local autom√°ticamente
   - Revisa la consola para detalles del error

### Logs Esperados

- üéØ "Using REAL backend V2.2 API for calculations"
- ‚úÖ "Configuration loaded from real backend"
- üíæ "Configuration saved to real backend"
- üîÑ "Loading configuration from REAL backend V2.2"
`

export default TestRealBackendIntegration
